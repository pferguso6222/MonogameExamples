<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MonoGame.Extended.Entities</name>
    </assembly>
    <members>
        <member name="M:MonoGame.Extended.Entities.BitVector.GetArrayLength(System.Int32,System.Int32)">
            <summary>
            Used for conversion between different representations of bit array. 
            Returns (n+(div-1))/div, rearranged to avoid arithmetic overflow. 
            For example, in the bit to int case, the straightforward calc would 
            be (n+31)/32, but that would cause overflow. So instead it's 
            rearranged to ((n-1)/32) + 1, with special casing for 0.
            
            Usage:
            GetArrayLength(77, BitsPerInt32): returns how many ints must be 
            allocated to store 77 bits.
            </summary>
            <param name="n"></param>
            <param name="div">use a conversion constant, e.g. BytesPerInt32 to get
            how many ints are required to store n bytes</param>
            <returns></returns>
        </member>
    </members>
</doc>
